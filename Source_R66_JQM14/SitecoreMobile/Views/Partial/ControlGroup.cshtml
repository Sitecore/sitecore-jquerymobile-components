@model Sitecore.Mvc.Presentation.RenderingModel
@using Sitecore.Data.Items
@using Sitecore.Mvc.Configuration
@using SitecoreMobile.Common
@using SitecoreMobile

@{        

    bool pageEditEnabled = (Sitecore.Context.Site.DisplayMode == Sitecore.Sites.DisplayMode.Edit);
        
    Item[] childrenItems = new Item[0];
    if (Model.Item != null && Model.Item.Children.Count > 0)
    {
        childrenItems = Model.Item.Children.Where(i => i[MobileFieldNames.PageItems.HidePageFromNavigation] != "1").ToArray();
    }
    else
    {
    }   

    var buttonMini = Model.Rendering.Parameters[MobileFieldNames.ButtonViewRenderingParameters.ButtonMini] == "1" ? "true" : null;
    var groupOrientation = Model.Rendering.Parameters[MobileFieldNames.ControlGroupViewRenderingParameters.GroupOrientation] ?? "horizontal";


}

@if (childrenItems.Length > 0)
{ 
    <div data-role="controlgroup" data-mini="@Html.AttributeEncode(buttonMini)" data-type="@Html.AttributeEncode(groupOrientation)">
        @foreach (Item item in childrenItems)
        {
            @Html.Partial("Button", new SitecoreMobile.Models.ButtonModel()
            {
                Item = item
            })        
        }
    </div>
} 
else if (pageEditEnabled)
{
    <div data-role="controlgroup" data-mini="@Html.AttributeEncode(buttonMini)" data-type="@Html.AttributeEncode(groupOrientation)">
        @Html.Partial("Button", new SitecoreMobile.Models.ButtonModel() { ButtonText = "No Children", ButtonIcon="alert", CssClass="ui-disabled" })  
    </div>
}