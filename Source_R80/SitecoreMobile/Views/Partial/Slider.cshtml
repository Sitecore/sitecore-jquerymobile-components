@model Sitecore.Mvc.Presentation.RenderingModel
@using SitecoreMobile

@{
    
    bool pageEditEnabled = (Sitecore.Context.Site.DisplayMode == Sitecore.Sites.DisplayMode.Edit);

    bool hiddenEditingField = Model.Rendering.Parameters[MobileFieldNames.StandardViewRenderingParameters.HiddenEditingField] == "1" ? true : false;
    if (hiddenEditingField && !pageEditEnabled)
    {
        return;
    }

    var fieldName = Model.Rendering.Parameters[MobileFieldNames.StandardViewRenderingParameters.FieldName];

    if (string.IsNullOrEmpty(fieldName))
    {
        return;
    }

    string sliderMinValue = Model.Rendering.Parameters[MobileFieldNames.SliderViewRenderingParameters.SliderMinValue] ?? "0";
    string sliderMaxValue = Model.Rendering.Parameters[MobileFieldNames.SliderViewRenderingParameters.SliderMaxValue] ?? "10";


    bool displayFieldTitle = Model.Rendering.Parameters[MobileFieldNames.StandardViewRenderingParameters.DisplayFieldTitle] == "1" ? true : false;
    bool displayEditingFieldTitle = Model.Rendering.Parameters[MobileFieldNames.StandardViewRenderingParameters.DisplayEditingFieldTitle] == "1" ? true : false;
    var pageEditorPrefix = (string)null;

    if (displayFieldTitle
        || (displayEditingFieldTitle && pageEditEnabled))
    {
        var itemField = Model.Item.Fields[fieldName];
        var fieldItem = Model.Item.Database.GetItem(itemField.ID);
        pageEditorPrefix = string.Format("<label>{0}: </label>", Html.Encode(fieldItem.DisplayName));
    }
    
}


<div>
    @Html.Raw(pageEditorPrefix) 
    @Html.Sitecore().Field(fieldName)
    <input type='text' data-ref='slider' name='@Html.AttributeEncode(string.Format("slider_{0}", fieldName))' min='@Html.AttributeEncode(sliderMinValue)' max='@Html.AttributeEncode(sliderMaxValue)' value='0'>
</div>

