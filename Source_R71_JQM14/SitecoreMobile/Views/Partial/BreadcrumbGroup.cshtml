@model Sitecore.Mvc.Presentation.RenderingModel
@using Sitecore.Data.Items
@using Sitecore.Mvc.Configuration
@using SitecoreMobile.Common

@{        
        
    bool pageEditEnabled = (Sitecore.Context.Site.DisplayMode == Sitecore.Sites.DisplayMode.Edit);
    
    var currentTemplate = Model.Item.Template;
    var Ancestors = Model.Item.Axes.GetAncestors()
        .Where(i => i.Template.ItemTemplateInheritsFromTemplate(currentTemplate) 
            && i.Parent.Template.ItemTemplateInheritsFromTemplate(currentTemplate)).ToArray();


    var buttonMini = Model.Rendering.Parameters[SitecoreMobile.MobileFieldNames.ButtonViewRenderingParameters.ButtonMini] == "1" ? "true" : null;
    var groupOrientation = Model.Rendering.Parameters[SitecoreMobile.MobileFieldNames.ControlGroupViewRenderingParameters.GroupOrientation] ?? "horizontal";
    
}

@if (Ancestors.Length > 0)
{ 
    <div data-role="controlgroup" data-mini="@Html.AttributeEncode(buttonMini)" data-type="@Html.AttributeEncode(groupOrientation)">
        @foreach (Item item in Ancestors)
        {
            @Html.Partial("Button", new SitecoreMobile.Models.ButtonModel()
            {
                Item = item
            })        
        }
    </div>
}
else if (pageEditEnabled)
{
    <div data-role="controlgroup" data-mini="@Html.AttributeEncode(buttonMini)" data-type="@Html.AttributeEncode(groupOrientation)">
        @Html.Partial("Button", new SitecoreMobile.Models.ButtonModel() { ButtonText = "Breadcrumb Hidden", ButtonIcon="alert", CssClass="ui-disabled" })  
    </div>
}